def action_get_text(self, by, locator, value=None, descricao=None, resultados=None, pin=None):
    """
    Captura texto de um elemento, considerando o estado do colaborador (CLOTURE ou ACTIF).
    - Se o estado for 'CLOTURE', captura normalmente (a data estar√° vis√≠vel).
    - Se o estado for 'ACTIF', ignora o passo.
    - Caso contr√°rio, tenta capturar o texto como fallback gen√©rico.
    """
    try:
        elem = self.wait.until(EC.presence_of_element_located((by, locator)))
        estado_elem = self.wait.until(EC.presence_of_element_located((By.ID, "etatPo")))

        estado = estado_elem.text.strip().upper()
        texto_elem = elem.text.strip() if elem.text else ""

        # üîπ Caso 1: Estado = CLOTURE ‚Üí captura data (ex: 15/09/2023)
        if estado == "CLOTURE" and "/" in texto_elem:
            if resultados is not None and descricao:
                resultados[descricao] = texto_elem
                self.log(f"‚úÖ Capturado '{descricao}' (CLOTURE): {texto_elem}", "DEBUG")

        # üîπ Caso 2: Estado = ACTIF ‚Üí pula passo
        elif estado == "ACTIF":
            self.log(f"‚è≠Ô∏è Pulando passo '{descricao}' (colaborador ativo)", "INFO")
            return

        # üîπ Caso 3: Outro estado ‚Üí tenta capturar se tiver conte√∫do
        else:
            if resultados is not None and descricao:
                resultados[descricao] = texto_elem
                self.log(f"‚ÑπÔ∏è Capturado '{descricao}' (outro estado '{estado}'): {texto_elem}", "DEBUG")

    except Exception as e:
        self.log(f"‚ö†Ô∏è Erro ao capturar '{descricao}': {e}", "WARNING")
        pass
